using System;
using System.Drawing;
using System.Windows.Forms;
using Central_de_Software.Utilities;

public class UserControlSoftware : UserControl
{
    public UserControlSoftware()
    {
        InitializeComponent();
    }

    private void InitializeComponent()
    {
        this.Dock = DockStyle.Fill;
        this.BackColor = Color.White;
        var corAzul = ColorTranslator.FromHtml("#1A377B");
        var corLaranja = ColorTranslator.FromHtml("#F15A22");
        var panel = new FlowLayoutPanel
        {
            Dock = DockStyle.Fill,
            FlowDirection = FlowDirection.TopDown,
            AutoScroll = true,
            Padding = new Padding(30, 30, 0, 0),
            WrapContents = false,
            Anchor = AnchorStyles.Left | AnchorStyles.Top
        };
        panel.Controls.Add(CriarBotao("AnyDesk", "anydesk.png", () => Instalar("AnyDesk")));
        panel.Controls.Add(CriarBotao("Google Chrome", "chrome.png", () => Instalar("Google Chrome")));
        panel.Controls.Add(CriarBotao("WinRAR", "winrar.png", () => Instalar("WinRAR")));
        panel.Controls.Add(CriarBotao("WhatsApp Desktop", "whatsapp.png", () => Instalar("WhatsApp Desktop")));
        panel.Controls.Add(CriarBotao("Adobe Acrobat Reader", "adobe.png", () => Instalar("Adobe Acrobat Reader")));
        panel.Controls.Add(CriarBotao("Revo Uninstaller", "revo.png", () => Instalar("Revo Uninstaller")));
        panel.Controls.Add(CriarBotao("Office 365", "office.png", () => Instalar("Office 365")));
        this.Controls.Add(panel);
    }

    private Button CriarBotao(string nome, string icone, Action onClick)
    {
        var btn = new Button
        {
            Text = "  " + nome,
            Width = 320,
            Height = 54,
            Font = new Font("Segoe UI", 11, FontStyle.Bold),
            Image = ResourceImages.GetImage(icone),
            ImageAlign = ContentAlignment.MiddleLeft,
            TextAlign = ContentAlignment.MiddleRight,
            FlatStyle = FlatStyle.Flat,
            BackColor = Color.White,
            ForeColor = ColorTranslator.FromHtml("#1A377B"),
            Margin = new Padding(0, 0, 0, 18),
            TextImageRelation = TextImageRelation.ImageBeforeText
        };
        btn.FlatAppearance.BorderSize = 0;
        btn.FlatAppearance.MouseOverBackColor = ColorTranslator.FromHtml("#F15A22");
        btn.FlatAppearance.MouseDownBackColor = ColorTranslator.FromHtml("#1A377B");
        btn.Click += (s, e) => onClick();
        btn.Anchor = AnchorStyles.Left | AnchorStyles.Top;
        return btn;
    }

    private async void Instalar(string nome)
    {
        // Aqui você pode mapear o nome para o resourceName e argumentos corretos
        string resourceName = null, tempName = null, args = "";
        switch (nome)
        {
            case "AnyDesk":
                resourceName = "Central_de_Software.Resources.anydesk.exe";
                tempName = "anydesk_installer.exe";
                break;
            case "Google Chrome":
                resourceName = "Central_de_Software.Resources.chrome_installer.exe";
                tempName = "chrome_installer.exe";
                break;
            case "WinRAR":
                resourceName = "Central_de_Software.Resources.winrar.exe";
                tempName = "winrar_installer.exe";
                break;
            case "WhatsApp Desktop":
                resourceName = "Central_de_Software.Resources.whatsapp.exe";
                tempName = "whatsapp_installer.exe";
                break;
            case "Adobe Acrobat Reader":
                resourceName = "Central_de_Software.Resources.adobe.exe";
                tempName = "adobe_installer.exe";
                break;
            case "Revo Uninstaller":
                resourceName = "Central_de_Software.Resources.revo.exe";
                tempName = "revo_installer.exe";
                break;
            case "Office 365":
                resourceName = "Central_de_Software.Resources.office.exe";
                tempName = "office_installer.exe";
                break;
        }
        if (resourceName != null && tempName != null)
        {
            try
            {
                await SoftwareInstaller.InstallFromEmbeddedAsync(resourceName, tempName, args, true);
                MessageBox.Show($"{nome} instalado com sucesso!", "Instalação", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Erro ao instalar {nome}: {ex.Message}", "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }
}
