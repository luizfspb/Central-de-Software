using System;
using System.Windows.Forms;
using System.Xml;
using System.IO;

public class UserControlFiscalXmlEditor : UserControl
{
    private TableLayoutPanel mainLayout;
    private FlowLayoutPanel flowPanelBotoes;
    private Label lblDescricao;
    private Button btnImportarXML;
    private Button btnSalvarXML;
    private GroupBox groupBoxDadosNFe;
    private TableLayoutPanel groupBoxLayout;
    private Label lblNumeroNF;
    private Label lblEmitente;
    private Label lblDestinatario;
    private Label lblDataEmissao;
    private Label lblValorTotal;
    private DataGridView gridProdutos;
    private OpenFileDialog openFileDialog;
    private SaveFileDialog saveFileDialog;
    private XmlDocument xmlDoc;
    private string xmlPath;

    public UserControlFiscalXmlEditor()
    {
        InitializeComponent();
    }

    private void InitializeComponent()
    {
        this.Dock = DockStyle.Fill;
        mainLayout = new TableLayoutPanel
        {
            Dock = DockStyle.Fill,
            ColumnCount = 1,
            RowCount = 4,
            RowStyles = {
                new RowStyle(SizeType.AutoSize),
                new RowStyle(SizeType.AutoSize),
                new RowStyle(SizeType.AutoSize),
                new RowStyle(SizeType.Percent, 100F)
            }
        };

        lblDescricao = new Label
        {
            Text = "Este editor permite apenas alterar a unidade de medida dos produtos da NF-e.",
            Font = new System.Drawing.Font("Segoe UI", 10, System.Drawing.FontStyle.Italic),
            ForeColor = System.Drawing.Color.FromArgb(120, 60, 0),
            AutoSize = true,
            Padding = new Padding(10, 10, 10, 10)
        };

        flowPanelBotoes = new FlowLayoutPanel
        {
            Dock = DockStyle.Fill,
            FlowDirection = FlowDirection.LeftToRight,
            AutoSize = true,
            Padding = new Padding(10, 0, 10, 0)
        };
        btnImportarXML = new Button { Text = "Importar XML", Width = 140, Height = 36, Font = new System.Drawing.Font("Segoe UI", 10F) };
        btnSalvarXML = new Button { Text = "Salvar XML", Width = 140, Height = 36, Font = new System.Drawing.Font("Segoe UI", 10F), Enabled = false };
        btnImportarXML.Click += BtnImportarXML_Click;
        btnSalvarXML.Click += BtnSalvarXML_Click;
        flowPanelBotoes.Controls.Add(btnImportarXML);
        flowPanelBotoes.Controls.Add(btnSalvarXML);

        groupBoxDadosNFe = new GroupBox
        {
            Text = "Dados da NF-e",
            Dock = DockStyle.Fill,
            Font = new System.Drawing.Font("Segoe UI", 10F)
        };
        groupBoxLayout = new TableLayoutPanel
        {
            Dock = DockStyle.Fill,
            ColumnCount = 2,
            RowCount = 5,
            AutoSize = true
        };
        groupBoxLayout.ColumnStyles.Add(new ColumnStyle(SizeType.Absolute, 120F));
        groupBoxLayout.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 100F));
        groupBoxLayout.RowStyles.Add(new RowStyle(SizeType.AutoSize));
        groupBoxLayout.RowStyles.Add(new RowStyle(SizeType.AutoSize));
        groupBoxLayout.RowStyles.Add(new RowStyle(SizeType.AutoSize));
        groupBoxLayout.RowStyles.Add(new RowStyle(SizeType.AutoSize));
        groupBoxLayout.RowStyles.Add(new RowStyle(SizeType.AutoSize));
        lblNumeroNF = new Label { Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true };
        lblEmitente = new Label { Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true };
        lblDestinatario = new Label { Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true };
        lblDataEmissao = new Label { Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true };
        lblValorTotal = new Label { Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true };
        groupBoxLayout.Controls.Add(new Label { Text = "Número NF-e:", Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true }, 0, 0);
        groupBoxLayout.Controls.Add(lblNumeroNF, 1, 0);
        groupBoxLayout.Controls.Add(new Label { Text = "Emitente:", Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true }, 0, 1);
        groupBoxLayout.Controls.Add(lblEmitente, 1, 1);
        groupBoxLayout.Controls.Add(new Label { Text = "Destinatário:", Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true }, 0, 2);
        groupBoxLayout.Controls.Add(lblDestinatario, 1, 2);
        groupBoxLayout.Controls.Add(new Label { Text = "Data Emissão:", Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true }, 0, 3);
        groupBoxLayout.Controls.Add(lblDataEmissao, 1, 3);
        groupBoxLayout.Controls.Add(new Label { Text = "Valor Total:", Font = new System.Drawing.Font("Segoe UI", 10F), AutoSize = true }, 0, 4);
        groupBoxLayout.Controls.Add(lblValorTotal, 1, 4);
        groupBoxDadosNFe.Controls.Add(groupBoxLayout);

        gridProdutos = new DataGridView
        {
            Dock = DockStyle.Fill,
            AllowUserToAddRows = false,
            AllowUserToDeleteRows = false,
            ReadOnly = false,
            MultiSelect = false,
            SelectionMode = DataGridViewSelectionMode.CellSelect,
            AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill,
            Font = new System.Drawing.Font("Segoe UI", 10F),
            ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize
        };
        gridProdutos.Columns.AddRange(new DataGridViewColumn[]
        {
            new DataGridViewTextBoxColumn { Name = "cProd", HeaderText = "Código", ReadOnly = true },
            new DataGridViewTextBoxColumn { Name = "xProd", HeaderText = "Descrição", ReadOnly = true },
            new DataGridViewTextBoxColumn { Name = "qCom", HeaderText = "Quantidade", ReadOnly = true },
            new DataGridViewTextBoxColumn { Name = "uCom", HeaderText = "Un. Medida", ReadOnly = false },
            new DataGridViewTextBoxColumn { Name = "vUnCom", HeaderText = "Valor Unit.", ReadOnly = true },
            new DataGridViewTextBoxColumn { Name = "vProd", HeaderText = "Valor Total", ReadOnly = true }
        });
        gridProdutos.CellValueChanged += GridProdutos_CellValueChanged;

        openFileDialog = new OpenFileDialog
        {
            Filter = "Arquivos XML|*.xml",
            Title = "Selecionar arquivo XML da NF-e"
        };
        saveFileDialog = new SaveFileDialog
        {
            Filter = "Arquivos XML|*.xml",
            Title = "Salvar arquivo XML da NF-e"
        };

        mainLayout.Controls.Add(lblDescricao, 0, 0);
        mainLayout.Controls.Add(flowPanelBotoes, 0, 1);
        mainLayout.Controls.Add(groupBoxDadosNFe, 0, 2);
        mainLayout.Controls.Add(gridProdutos, 0, 3);
        this.Controls.Add(mainLayout);
    }

    private void BtnImportarXML_Click(object sender, EventArgs e)
    {
        if (openFileDialog.ShowDialog() == DialogResult.OK)
        {
            try
            {
                xmlPath = openFileDialog.FileName;
                xmlDoc = new XmlDocument();
                xmlDoc.Load(xmlPath);

                XmlNamespaceManager nsManager = new XmlNamespaceManager(xmlDoc.NameTable);
                nsManager.AddNamespace("nfe", "http://www.portalfiscal.inf.br/nfe");

                var infNFe = xmlDoc.SelectSingleNode("//nfe:infNFe", nsManager);
                if (infNFe != null)
                {
                    lblNumeroNF.Text = infNFe.SelectSingleNode(".//nfe:nNF", nsManager)?.InnerText;
                    lblEmitente.Text = infNFe.SelectSingleNode(".//nfe:emit/nfe:xNome", nsManager)?.InnerText;
                    lblDestinatario.Text = infNFe.SelectSingleNode(".//nfe:dest/nfe:xNome", nsManager)?.InnerText;
                    lblDataEmissao.Text = DateTime.Parse(infNFe.SelectSingleNode(".//nfe:dhEmi", nsManager)?.InnerText).ToString("dd/MM/yyyy HH:mm:ss");
                    lblValorTotal.Text = "R$ " + infNFe.SelectSingleNode(".//nfe:total/nfe:ICMSTot/nfe:vNF", nsManager)?.InnerText;

                    gridProdutos.Rows.Clear();
                    var produtos = infNFe.SelectNodes(".//nfe:det/nfe:prod", nsManager);
                    foreach (XmlNode produto in produtos)
                    {
                        int rowIndex = gridProdutos.Rows.Add();
                        var row = gridProdutos.Rows[rowIndex];
                        row.Cells["cProd"].Value = produto.SelectSingleNode("nfe:cProd", nsManager)?.InnerText;
                        row.Cells["xProd"].Value = produto.SelectSingleNode("nfe:xProd", nsManager)?.InnerText;
                        row.Cells["qCom"].Value = produto.SelectSingleNode("nfe:qCom", nsManager)?.InnerText;
                        row.Cells["uCom"].Value = produto.SelectSingleNode("nfe:uCom", nsManager)?.InnerText;
                        row.Cells["vUnCom"].Value = produto.SelectSingleNode("nfe:vUnCom", nsManager)?.InnerText;
                        row.Cells["vProd"].Value = produto.SelectSingleNode("nfe:vProd", nsManager)?.InnerText;
                    }
                }

                btnSalvarXML.Enabled = true;
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Erro ao carregar o XML: {ex.Message}", "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }

    private void GridProdutos_CellValueChanged(object sender, DataGridViewCellEventArgs e)
    {
        if (e.ColumnIndex == gridProdutos.Columns["uCom"].Index && e.RowIndex >= 0)
        {
            try
            {
                string novaUnidade = gridProdutos.Rows[e.RowIndex].Cells["uCom"].Value?.ToString();
                if (!string.IsNullOrWhiteSpace(novaUnidade))
                {
                    XmlNamespaceManager nsManager = new XmlNamespaceManager(xmlDoc.NameTable);
                    nsManager.AddNamespace("nfe", "http://www.portalfiscal.inf.br/nfe");

                    var produtos = xmlDoc.SelectNodes("//nfe:det/nfe:prod", nsManager);
                    var produto = produtos[e.RowIndex];
                    var uComNode = produto.SelectSingleNode("nfe:uCom", nsManager);
                    if (uComNode != null)
                    {
                        uComNode.InnerText = novaUnidade;
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Erro ao atualizar a unidade de medida: {ex.Message}", "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }

    private void BtnSalvarXML_Click(object sender, EventArgs e)
    {
        saveFileDialog.FileName = Path.GetFileName(xmlPath);
        if (saveFileDialog.ShowDialog() == DialogResult.OK)
        {
            try
            {
                xmlDoc.Save(saveFileDialog.FileName);
                MessageBox.Show("XML salvo com sucesso!", "Sucesso", MessageBoxButtons.OK, MessageBoxIcon.Information);
                LimparSelecao();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Erro ao salvar o XML: {ex.Message}", "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }

    private void LimparSelecao()
    {
        lblNumeroNF.Text = string.Empty;
        lblEmitente.Text = string.Empty;
        lblDestinatario.Text = string.Empty;
        lblDataEmissao.Text = string.Empty;
        lblValorTotal.Text = string.Empty;
        gridProdutos.Rows.Clear();
        btnSalvarXML.Enabled = false;
        xmlDoc = null;
        xmlPath = null;
    }
}
