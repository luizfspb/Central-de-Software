using System;
using System.Windows.Forms;

namespace Central_de_Software
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private async void btnInstallAnyDesk_Click(object sender, EventArgs e)
        {
            try
            {
                if (SoftwareInstaller.IsSoftwareInstalled("AnyDesk"))
                {
                    MessageBox.Show("AnyDesk is already installed.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }

                bool success = await SoftwareInstaller.InstallFromEmbeddedAsync(
                    "Central_de_Software.Resources.AnyDesk.exe",
                    "anydesk_installer.exe",
                    "--install \"C:\\Program Files (x86)\\AnyDesk\" --silent --create-desktop-icon"
                );

                if (success)
                {
                    MessageBox.Show("AnyDesk installation started successfully.", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error installing AnyDesk: {ex.Message}", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private async void btnInstallChrome_Click(object sender, EventArgs e)
        {
            try
            {
                if (SoftwareInstaller.IsSoftwareInstalled("Google Chrome"))
                {
                    MessageBox.Show("Google Chrome is already installed.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }

                bool success = await SoftwareInstaller.InstallFromEmbeddedAsync(
                    "Central_de_Software.Resources.ChromeSetup.exe",
                    "chrome_installer.exe",
                    "/silent /install"
                );

                if (success)
                {
                    MessageBox.Show("Chrome installation started successfully.", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error installing Chrome: {ex.Message}", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private async void btnInstallWinRAR_Click(object sender, EventArgs e)
        {
            try
            {
                if (SoftwareInstaller.IsSoftwareInstalled("WinRAR"))
                {
                    MessageBox.Show("WinRAR is already installed.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }

                bool success = await SoftwareInstaller.InstallFromEmbeddedAsync(
                    "Central_de_Software.Resources.WinRAR.exe",
                    "winrar_installer.exe",
                    "/S"
                );

                if (success)
                {
                    MessageBox.Show("WinRAR installation started successfully.", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error installing WinRAR: {ex.Message}", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }
}
